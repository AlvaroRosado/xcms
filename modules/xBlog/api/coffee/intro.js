// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ContentEdit.Intro = (function(superClass) {
  extend(Intro, superClass);

  function Intro(tagName, attributes, content) {
    Intro.__super__.constructor.call(this, tagName, attributes);
    if (content instanceof HTMLString.String) {
      this.content = content;
    } else {
      this.content = new HTMLString.String(content).trim();
    }
  }

  Intro.prototype.type = function() {
    return 'Intro';
  };

  Intro.prototype.typeName = function() {
    return 'Intro';
  };

  Intro.prototype._keyReturn = function(ev) {
    return ev.preventDefault();
  };

  Intro.prototype.blur = function() {
    var error, error1, root;
    if (this.isMounted()) {
      this._syncContent();
      try {
        this._domElement.blur();
      } catch (error1) {
        error = error1;
      }
      this._domElement.removeAttribute('contenteditable');
    }
    root = ContentEdit.Root.get();
    if (this.isFocused()) {
      this._removeCSSClass('ce-element--focused');
      root._focused = null;
      return root.trigger('blur', this);
    }
  };

  return Intro;

})(ContentEdit.Text);

ContentEdit.TagNames.get().register(ContentEdit.Intro, 'intro');
