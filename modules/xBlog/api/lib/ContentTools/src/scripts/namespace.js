// Generated by CoffeeScript 1.10.0
window.ContentTools = {
  Tools: {},
  DEFAULT_TOOLS: [['bold', 'italic', 'link', 'align-left', 'align-center', 'align-right'], ['heading', 'subheading', 'paragraph', 'unordered-list', 'ordered-list', 'table', 'indent', 'unindent', 'line-break'], ['image', 'video', 'preformatted'], ['undo', 'redo', 'remove']],
  DEFAULT_VIDEO_HEIGHT: 300,
  DEFAULT_VIDEO_WIDTH: 400,
  HIGHLIGHT_HOLD_DURATION: 2000,
  INSPECTOR_IGNORED_ELEMENTS: ['ListItemText', 'Region', 'TableCellText'],
  IMAGE_UPLOADER: null,
  MIN_CROP: 10,
  RESTRICTED_ATTRIBUTES: {
    '*': ['style'],
    'img': ['height', 'src', 'width', 'data-ce-max-width', 'data-ce-min-width'],
    'iframe': ['height', 'width']
  },
  getEmbedVideoURL: function(url) {
    var domains, i, id, k, kv, len, m, netloc, paramStr, params, paramsStr, parser, path, ref, v;
    domains = {
      'www.youtube.com': 'youtube',
      'youtu.be': 'youtube',
      'vimeo.com': 'vimeo',
      'player.vimeo.com': 'vimeo'
    };
    parser = document.createElement('a');
    parser.href = url;
    netloc = parser.hostname.toLowerCase();
    path = parser.pathname;
    if (path !== null && path.substr(0, 1) !== "/") {
      path = "/" + path;
    }
    params = {};
    paramsStr = parser.search.slice(1);
    ref = paramsStr.split('&');
    for (i = 0, len = ref.length; i < len; i++) {
      kv = ref[i];
      kv = kv.split("=");
      if (kv[0]) {
        params[kv[0]] = kv[1];
      }
    }
    switch (domains[netloc]) {
      case 'youtube':
        if (path.toLowerCase() === '/watch') {
          if (!params['v']) {
            return null;
          }
          id = params['v'];
          delete params['v'];
        } else {
          m = path.match(/\/([A-Za-z0-9_-]+)$/i);
          if (!m) {
            return null;
          }
          id = m[1];
        }
        url = "https://www.youtube.com/embed/" + id;
        paramStr = ((function() {
          var results;
          results = [];
          for (k in params) {
            v = params[k];
            results.push(k + "=" + v);
          }
          return results;
        })()).join('&');
        if (paramStr) {
          url += "?" + paramStr;
        }
        return url;
      case 'vimeo':
        m = path.match(/\/(\w+\/\w+\/){0,1}(\d+)/i);
        if (!m) {
          return null;
        }
        url = "https://player.vimeo.com/video/" + m[2];
        paramStr = ((function() {
          var results;
          results = [];
          for (k in params) {
            v = params[k];
            results.push(k + "=" + v);
          }
          return results;
        })()).join('&');
        if (paramStr) {
          url += "?" + paramStr;
        }
        return url;
    }
    return null;
  },
  getRestrictedAtributes: function(tagName) {
    var restricted;
    restricted = [];
    if (ContentTools.RESTRICTED_ATTRIBUTES[tagName]) {
      restricted = restricted.concat(ContentTools.RESTRICTED_ATTRIBUTES[tagName]);
    }
    if (ContentTools.RESTRICTED_ATTRIBUTES['*']) {
      restricted = restricted.concat(ContentTools.RESTRICTED_ATTRIBUTES['*']);
    }
    return restricted;
  }
};
