// Generated by CoffeeScript 1.10.0
window.ContentEdit = {
  DEFAULT_MAX_ELEMENT_WIDTH: 800,
  DEFAULT_MIN_ELEMENT_WIDTH: 80,
  DRAG_HOLD_DURATION: 500,
  DROP_EDGE_SIZE: 50,
  HELPER_CHAR_LIMIT: 250,
  INDENT: '    ',
  LANGUAGE: 'en',
  RESIZE_CORNER_SIZE: 15,
  _translations: {},
  _: function(s) {
    var lang;
    lang = ContentEdit.LANGUAGE;
    if (ContentEdit._translations[lang] && ContentEdit._translations[lang][s]) {
      return ContentEdit._translations[lang][s];
    }
    return s;
  },
  addTranslations: function(language, translations) {
    return ContentEdit._translations[language] = translations;
  },
  addCSSClass: function(domElement, className) {
    var c, classAttr, classNames;
    if (domElement.classList) {
      domElement.classList.add(className);
      return;
    }
    classAttr = domElement.getAttribute('class');
    if (classAttr) {
      classNames = (function() {
        var i, len, ref, results;
        ref = classAttr.split(' ');
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          c = ref[i];
          results.push(c);
        }
        return results;
      })();
      if (classNames.indexOf(className) === -1) {
        return domElement.setAttribute('class', classAttr + " " + className);
      }
    } else {
      return domElement.setAttribute('class', className);
    }
  },
  attributesToString: function(attributes) {
    var attributeStrings, i, len, name, names, value;
    if (!attributes) {
      return '';
    }
    names = (function() {
      var results;
      results = [];
      for (name in attributes) {
        results.push(name);
      }
      return results;
    })();
    names.sort();
    attributeStrings = [];
    for (i = 0, len = names.length; i < len; i++) {
      name = names[i];
      value = attributes[name];
      if (value === '') {
        attributeStrings.push(name);
      } else {
        value = HTMLString.String.encode(value);
        value = value.replace(/"/g, '&quot;');
        attributeStrings.push(name + "=\"" + value + "\"");
      }
    }
    return attributeStrings.join(' ');
  },
  removeCSSClass: function(domElement, className) {
    var c, classAttr, classNameIndex, classNames;
    if (domElement.classList) {
      domElement.classList.remove(className);
      if (domElement.classList.length === 0) {
        domElement.removeAttribute('class');
      }
      return;
    }
    classAttr = domElement.getAttribute('class');
    if (classAttr) {
      classNames = (function() {
        var i, len, ref, results;
        ref = classAttr.split(' ');
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          c = ref[i];
          results.push(c);
        }
        return results;
      })();
      classNameIndex = classNames.indexOf(className);
      if (classNameIndex > -1) {
        classNames.splice(classNameIndex, 1);
        if (classNames.length) {
          return domElement.setAttribute('class', classNames.join(' '));
        } else {
          return domElement.removeAttribute('class');
        }
      }
    }
  }
};
